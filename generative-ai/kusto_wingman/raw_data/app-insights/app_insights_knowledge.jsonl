[
    {
        "question": "find request or web request that meets SLA if it completes in under 3 seconds.",
        "queryType": "appinsights",
        "query": "\nrequests\n| where timestamp > ago(7d)\n| summarize slaMet = count(duration < 3000), slaBreached = count(duration >= 3000), totalCount = count() by bin(timestamp, 1h)\n| extend SLAIndex = slaMet * 100.0 / totalCount \n| extend SLA = 99.9\n| project SLAIndex, timestamp, SLA \n| render timechart \n"
    },
    {
        "question": "Tnumber of failed requests in the past 24 hours.",
        "queryType": "appinsights",
        "query": "\nrequests \n | where timestamp > ago(24h) and success==\"False\"\n | join kind=inner (exceptions \n\t| where timestamp > ago(24h) ) on operation_Id \n | project type, method, requestName = name, requestDuration = duration\n"
    },
    {
        "question": "get the 50th, 90th, and 95th percentiles of request duration in the past 24 hours:",
        "queryType": "appinsights",
        "query": "\nrequests \n  | where timestamp > ago(24h) \n  | summarize percentiles(duration, 50, 90, 95) by bin(timestamp, 1h) \n  | render timechart\n"
    },
    {
        "question": "number of requests received from each country in the past 24 hours. Traffic (request) distribution from top 10 countries",
        "queryType": "appinsights",
        "query": "\nrequests \n | where  timestamp > ago(24h) \n | summarize count() by client_CountryOrRegion\n | top 10 by count_ \n | render piechart\n"
    },
    {
        "question": "Get all trace where at least one Error trace present\n",
        "queryType": "appinsights",
        "query": "requests\n| where success == \"False\" and timestamp >= ago(7d) \n| join kind= inner traces on operation_Id  \n| project operation_Id , timestamp, message, severityLevel, appName \n| order  by timestamp, operation_Id\n"
    },
    {
        "question": "Get Error trace only\n",
        "queryType": "appinsights",
        "query": "requests\n| where success == \"False\" and timestamp >= ago(7d) \n| join kind= inner (\ntraces\n| where severityLevel == 3\n) on operation_Id  \n| project operation_Id , timestamp, message, severityLevel  \n| order  by timestamp, operation_Id\n"
    },
    {
        "question": "Get Error trace only (using timechart)\n",
        "queryType": "appinsights",
        "query": "requests\n| where success == \"False\" and timestamp >= ago(7d)\n| join kind= inner (\ntraces\n| where severityLevel == 3\n) on operation_Id  \n| summarize event_count=count() by bin(timestamp, 1h)"
    },
    {
        "question": "Count all requests",
        "queryType": "appinsights",
        "query": "union *\n| count \n"
    },
    {
        "question": "get or show me requests to Azure Function",
        "queryType": "appinsights",
        "query": "requests\n| where timestamp >= ago(1d) \n| where operation_Name matches regex \".*Func\" \n| limit 10 \n| order by timestamp desc \n"
    },
    {
        "question": "Show me dependencies related to slow requests\n",
        "queryType": "appinsights",
        "query": "requests\n| where timestamp > ago(1d)\n| where duration > 1000\n| limit 100\n| order by duration desc\n"
    },
    {
        "question": "get traces wthat containsd HTTP header as json, parse json header",
        "queryType": "appinsights",
        "query": "traces\n| where timestamp <= ago(1d) \n| where  message has \"header\"\n| extend jsonObj = parse_json(message) \n| project timestamp, messageTimestamp=jsonObj.messageTimestamp, message\n| limit 1000\n| order by timestamp desc \n"
    },
    {
        "question": "show me requests group by duration more than 1 second",
        "queryType": "appinsights",
        "query": "requests\n| where timestamp > ago(1d)\n| extend responseBucket = iff(duration > 1000, \"Too long\", \"Ok\") \n| project name, duration , responseBucket \n"
    },
    {
        "question": "show me requests larger than 7 days where duration lesser than 2 seconds",
        "queryType": "appinsights",
        "query": "requests\n| where timestamp > ago(7d)\n| summarize slaMet=count(duration<2000),slaBreached=count(duration>=2000) by bin(timestamp, 1h)  \n| render timechart \n"
    },
    {
        "question": "Check for requests that meets SLA which duration is under 2 seconds",
        "queryType": "appinsights",
        "query": "requests\n| where timestamp > ago(7d)\n| summarize slaMet=count(duration<2000),slaBreached=count(duration>=2000), totalCount=count()  by bin(timestamp, 1h) \n| extend pctIndex = slaMet * 100.0/totalCount \n| project pctIndex ,timestamp\n| render timechart  \n"
    },
    {
        "question": "show me the total requests that is more than 1 day ago group by or summarize by duration in percentage",
        "queryType": "appinsights",
        "query": "requests\n| where timestamp > ago(1d)\n| summarize percentiles(duration, 50, 95), reqCount100s=count()/100 by bin(timestamp, 1h)"
    },
    {
        "question": "show me all failed requests 7 days ago summarize or group by timestamp and result code",
        "queryType": "appinsights",
        "query": "requests\n| where timestamp >= ago(7d)\n| where success == \"False\" \n| summarize arg_max(timestamp, name, resultCode) by cloud_RoleInstance\n"
    },
    {
        "question": "show me all traces 7 days ago group by message",
        "queryType": "appinsights",
        "query": "traces\n| where timestamp >= ago(7d)\n| summarize Count=count() by message\n| reduce by message \n"
    },
    {
        "question": "show me distinct page views by session 7 days ago",
        "queryType": "appinsights",
        "query": "pageViews\n| where timestamp >= ago(7d)\n| summarize dcount(name) by session_Id  \n| order by session_Id\n"
    },
    {
        "question": "show me top set of page people visited 7 days ago",
        "queryType": "appinsights",
        "query": "pageViews\n| where timestamp >= ago(7d)\n| order by timestamp desc\n| summarize pageVisited = makelist(name) by session_Id \n| top 10\n"
    },
    {
        "question": "what are the top 10 common page flows for my users",
        "queryType": "appinsights",
        "query": "pageViews\n| where timestamp >= ago(7d)\n| order by timestamp desc\n| summarize pageVisited = makelist(name) by session_Id \n| summarize count() by tostring(pageVisited)  \n| top 10 by count_ desc\n"
    },
    {
        "question": "Search any data in traces with keyword",
        "queryType": "appinsights",
        "query": "traces\n    | extend jsonObj = parse_json(message) \n    | where operation_Name == \"ApplicationName\" \n    | where timestamp > ago(30d)\n    | search \"keyword\"  \n    | limit 50\n    | order by timestamp asc \n"
    },
    {
        "question": "Counting the number of unique VM in 1 minute.\n",
        "queryType": "appinsights",
        "query": "let start = datetime(2019-01-25T00:00);\ncustomMetrics\n| where timestamp > start\n| where timestamp < start +1m\n| where name == \"Function1 Successes\" \n| summarize uniqueVMCount=dcount(cloud_RoleInstance)\n"
    },
    {
        "question": "show distinct traces by operation Id",
        "queryType": "appinsights",
        "query": "traces\n| where operation_Name == \"Function\" and message contains \"1560\" \n| distinct operation_Id  \n"
    },
    {
        "question": "Get Azure durable function trace logs",
        "queryType": "appinsights",
        "query": "traces\n| extend functionName = tostring(customDimensions[\"prop__functionName\"]) \n| extend instanceId = tostring(customDimensions[\"prop__instanceId\"]) \n| extend state = tostring(customDimensions[\"prop__state\"]) \n| extend isReplay = tobool(customDimensions[\"prop__isReplay\"]) \n| extend output = tostring(customDimensions[\"prop__output\"]) \n| extend functionType = tostring(customDimensions[\"prop__functionType\"]) \n| where isReplay != true\n| project timestamp, instanceId , functionName ,state, output , appName = cloud_RoleName , functionType \n| summarize arg_max(timestamp, *) by instanceId \n| order by timestamp desc nulls last \n"
    },
    {
        "question": "calculates the current and monthly average request duration",
        "queryType": "appinsights",
        "query": "let response_last_month = toscalar(\n    requests\n    | where timestamp between(ago(7d) .. ago(1d))\n    | summarize value=avg(duration) \n);\nrequests\n| where timestamp >= ago(1d)\n| make-series avg_duration = avg(duration) default=0 on timestamp in range(ago(1d), now(), 15m) \n| extend monthly_avg = repeat(response_last_month, array_length(avg_duration))"
    },
    {
        "question": "retrieves all customEvents recorded in the past 24 hours, and calculates their total count by name, and the number of distinct users. Display the 10 names with the highest count are selected, and their calculated values (count and distict users).",
        "queryType": "appinsights",
        "query": "customEvents \n | where timestamp >= ago(24h)\n | summarize dcount(user_Id), count() by name\n | top 10 by count_"
    }
]